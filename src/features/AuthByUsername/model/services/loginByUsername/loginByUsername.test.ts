import {DeepPartial, Dispatch} from "@reduxjs/toolkit";import {StateSchema} from "app/providers/StoreProvider";import { loginByUsername } from "./loginByUsername";import axios from "axios";jest.mock("axios");const mockedAxios = jest.mocked(axios, true);describe(loginByUsername.name, () => {    let dispatch: Dispatch;    let getState: () => DeepPartial<StateSchema>;    beforeEach(() => {        dispatch = jest.fn();        getState = jest.fn();    })    test('success login', async () => {        mockedAxios.post.mockReturnValue(Promise.resolve({        data: {            username: 'admin',            id: 1        }    }))        const action = loginByUsername({username: 'admin', password: '123'});        const result = await action(dispatch, getState, {});        expect(mockedAxios.post).toHaveBeenCalled();        expect(result.meta.requestStatus).toEqual('fulfilled');    });    test('', async () => {        mockedAxios.post.mockReturnValue(Promise.resolve({ status: 403 }))        const action = loginByUsername({username: 'admin', password: '123'});        const result = await action(dispatch, getState, {});        expect(mockedAxios.post).toHaveBeenCalled();        expect(result.meta.requestStatus).toEqual('rejected');    });})