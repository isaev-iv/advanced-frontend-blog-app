import {ChangeEvent, InputHTMLAttributes, memo, useEffect, useRef, useState} from "react";import {classNames} from "shared/lib/classNames/classNames";import cls from './Input.module.scss'type HTMLInputProps = Omit<InputHTMLAttributes<HTMLInputElement>, "value" | "onChange">interface InputProps extends HTMLInputProps {    className?: string;    value?: string;    type?: string;    placeholder?: string;    onChange?: (value: string) => void};export const Input = memo((props: InputProps) => {    const {        className,        value,        onChange,        type='text',        placeholder,        ...otherProps    } = props;    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {        onChange?.(e.target.value);    }    return (        <div className={classNames(cls.input, {}, [])}>            <input                type={type}                value={value}                onChange={onChangeHandler}                placeholder={placeholder}                {...otherProps}            />        </div>    );});